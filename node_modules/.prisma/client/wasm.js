
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.PatientScalarFieldEnum = {
  id: 'id',
  firstName: 'firstName',
  phoneNumber: 'phoneNumber',
  zipcode: 'zipcode',
  age: 'age',
  optOutCustomMessages: 'optOutCustomMessages',
  consentGiven: 'consentGiven',
  consentDate: 'consentDate',
  familyContactName: 'familyContactName',
  familyContactPhone: 'familyContactPhone',
  familyContactRelation: 'familyContactRelation',
  familyContactConsent: 'familyContactConsent',
  healthcareProviderName: 'healthcareProviderName',
  healthcareProviderHospital: 'healthcareProviderHospital',
  healthcareProviderPhone: 'healthcareProviderPhone',
  healthcareProviderConsent: 'healthcareProviderConsent',
  medications: 'medications',
  preExistingConditions: 'preExistingConditions',
  chronicConditions: 'chronicConditions',
  hospital: 'hospital',
  dialysisSchedule: 'dialysisSchedule',
  smoker: 'smoker',
  isPregnant: 'isPregnant',
  activityLevel: 'activityLevel',
  riskLevel: 'riskLevel',
  monitoringEnabled: 'monitoringEnabled',
  preferredLanguage: 'preferredLanguage',
  registrationComplete: 'registrationComplete',
  lastHealthCheck: 'lastHealthCheck',
  lastRiskLevel: 'lastRiskLevel',
  lastUrgency: 'lastUrgency',
  lastEscalationLevel: 'lastEscalationLevel',
  lastMonitoringInterval: 'lastMonitoringInterval',
  lastSymptomText: 'lastSymptomText',
  lastAnalysisTimestamp: 'lastAnalysisTimestamp',
  lastWeatherTemp: 'lastWeatherTemp',
  lastWeatherHumidity: 'lastWeatherHumidity',
  confidenceScore: 'confidenceScore',
  emergencyAlerted: 'emergencyAlerted',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MessageScalarFieldEnum = {
  id: 'id',
  from: 'from',
  to: 'to',
  body: 'body',
  direction: 'direction',
  messageType: 'messageType',
  messageSid: 'messageSid',
  status: 'status',
  errorMessage: 'errorMessage',
  mediaUrl: 'mediaUrl',
  mediaType: 'mediaType',
  numMedia: 'numMedia',
  patientId: 'patientId',
  createdAt: 'createdAt'
};

exports.Prisma.HealthAnalysisScalarFieldEnum = {
  id: 'id',
  patientId: 'patientId',
  symptomsText: 'symptomsText',
  currentTemperature: 'currentTemperature',
  riskLevel: 'riskLevel',
  riskScore: 'riskScore',
  confidence: 'confidence',
  symptomsDetected: 'symptomsDetected',
  reasoning: 'reasoning',
  immediateActions: 'immediateActions',
  monitoringPattern: 'monitoringPattern',
  monitoringIntervals: 'monitoringIntervals',
  monitoringDuration: 'monitoringDuration',
  responseMessage: 'responseMessage',
  monitoringScheduled: 'monitoringScheduled',
  createdAt: 'createdAt'
};

exports.Prisma.MonitoringJobScalarFieldEnum = {
  id: 'id',
  patientId: 'patientId',
  jobType: 'jobType',
  jobId: 'jobId',
  riskLevel: 'riskLevel',
  checkNumber: 'checkNumber',
  totalChecks: 'totalChecks',
  status: 'status',
  scheduledFor: 'scheduledFor',
  completedAt: 'completedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Patient: 'Patient',
  Message: 'Message',
  HealthAnalysis: 'HealthAnalysis',
  MonitoringJob: 'MonitoringJob'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/ahsantahseen/Development/Storm Logic/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/ahsantahseen/Development/Storm Logic/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "datasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\nmodel Patient {\n  id Int @id @default(autoincrement())\n\n  // Basic Information\n  firstName   String\n  phoneNumber String @unique\n  zipcode     String\n  age         Int\n\n  // Consent and Preferences\n  optOutCustomMessages Boolean   @default(false)\n  consentGiven         Boolean   @default(false)\n  consentDate          DateTime?\n\n  // Contact Information\n  familyContactName     String?\n  familyContactPhone    String?\n  familyContactRelation String?\n  familyContactConsent  Boolean @default(false)\n\n  healthcareProviderName     String?\n  healthcareProviderHospital String?\n  healthcareProviderPhone    String?\n  healthcareProviderConsent  Boolean @default(false)\n\n  // Medical Information\n  medications           Json? // JSON array of medication names\n  preExistingConditions Json? // JSON array of condition codes\n  chronicConditions     Json? // JSON array of chronic condition codes\n  hospital              String?\n  dialysisSchedule      String?\n\n  // Lifestyle Factors\n  smoker        Boolean @default(false)\n  isPregnant    Boolean @default(false)\n  activityLevel String  @default(\"moderate\") // low, moderate, high\n\n  // System Fields\n  riskLevel            String    @default(\"medium\") // low, medium, high\n  monitoringEnabled    Boolean   @default(true)\n  preferredLanguage    String    @default(\"en\")\n  registrationComplete Boolean   @default(false)\n  lastHealthCheck      DateTime?\n\n  // Risk Tracking Fields\n  lastRiskLevel          String? // Latest calculated risk level\n  lastUrgency            String? // Latest urgency assessment\n  lastEscalationLevel    String? // Latest escalation level\n  lastMonitoringInterval Int? // Latest monitoring interval in minutes\n  lastSymptomText        String? // Latest symptom description\n  lastAnalysisTimestamp  DateTime? // When the last analysis was performed\n  lastWeatherTemp        Float? // Temperature during last analysis\n  lastWeatherHumidity    Float? // Humidity during last analysis\n  confidenceScore        Float? // AI confidence in last analysis\n  emergencyAlerted       Boolean   @default(false) // Whether emergency was flagged\n\n  // Tracking\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  messages       Message[]\n  healthAnalyses HealthAnalysis[]\n  monitoringJobs MonitoringJob[]  @relation(\"MonitoringJobs\")\n\n  @@map(\"patients\")\n}\n\nmodel Message {\n  id           Int     @id @default(autoincrement())\n  from         String\n  to           String\n  body         String\n  direction    String // 'incoming' | 'outgoing' | 'system'\n  messageType  String  @default(\"whatsapp\") // 'whatsapp' | 'daily_health_check' | 'ai_symptom_check' | 'ai_analysis'\n  messageSid   String? // Twilio message SID\n  status       String? // Message status from Twilio\n  errorMessage String? // Error message if failed or analysis data\n  mediaUrl     String? // Media URL for WhatsApp\n  mediaType    String? // Media content type\n  numMedia     Int     @default(0) // Number of media attachments\n\n  // Relations\n  patientId Int?\n  patient   Patient? @relation(fields: [patientId], references: [id])\n\n  createdAt DateTime @default(now())\n\n  @@map(\"messages\")\n}\n\nmodel HealthAnalysis {\n  id Int @id @default(autoincrement())\n\n  // Patient relation\n  patientId Int\n  patient   Patient @relation(fields: [patientId], references: [id])\n\n  // Analysis input\n  symptomsText       String\n  currentTemperature Float?\n\n  // Analysis results\n  riskLevel        String // CRITICAL, HIGH, MODERATE, LOW\n  riskScore        Float\n  confidence       Float\n  symptomsDetected Json? // JSON array of detected symptom categories\n  reasoning        Json? // JSON array of risk factors\n  immediateActions Json? // JSON array of recommended actions\n\n  // Monitoring recommendation\n  monitoringPattern   String // CRITICAL, HIGH, MODERATE\n  monitoringIntervals Json? // JSON array of check-in intervals in minutes\n  monitoringDuration  Int // Duration in minutes\n\n  // Response\n  responseMessage     String // Generated personalized response\n  monitoringScheduled Boolean @default(false)\n\n  // Tracking\n  createdAt DateTime @default(now())\n\n  @@map(\"health_analyses\")\n}\n\nmodel MonitoringJob {\n  id Int @id @default(autoincrement())\n\n  // Patient relation\n  patientId Int\n  patient   Patient @relation(fields: [patientId], references: [id], name: \"MonitoringJobs\")\n\n  // Job details\n  jobType     String // daily_health_check, ai_symptom\n  jobId       String  @unique // BullMQ job ID\n  riskLevel   String? // For AI symptom monitoring\n  checkNumber Int? // For AI symptom monitoring\n  totalChecks Int? // For AI symptom monitoring\n\n  // Status\n  status       String    @default(\"scheduled\") // scheduled, completed, failed, cancelled\n  scheduledFor DateTime\n  completedAt  DateTime?\n\n  // Tracking\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"monitoring_jobs\")\n}\n",
  "inlineSchemaHash": "468f18541605abd0c0b8acb2afb5b1009ed8c74963cb9a64acf9f52019ff278f",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Patient\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"zipcode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"age\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"optOutCustomMessages\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"consentGiven\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"consentDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"familyContactName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"familyContactPhone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"familyContactRelation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"familyContactConsent\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"healthcareProviderName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"healthcareProviderHospital\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"healthcareProviderPhone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"healthcareProviderConsent\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"medications\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"preExistingConditions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"chronicConditions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"hospital\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dialysisSchedule\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"smoker\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isPregnant\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"activityLevel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"riskLevel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"monitoringEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"preferredLanguage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"registrationComplete\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"lastHealthCheck\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastRiskLevel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastUrgency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastEscalationLevel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastMonitoringInterval\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastSymptomText\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastAnalysisTimestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastWeatherTemp\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"lastWeatherHumidity\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"confidenceScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"emergencyAlerted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"MessageToPatient\"},{\"name\":\"healthAnalyses\",\"kind\":\"object\",\"type\":\"HealthAnalysis\",\"relationName\":\"HealthAnalysisToPatient\"},{\"name\":\"monitoringJobs\",\"kind\":\"object\",\"type\":\"MonitoringJob\",\"relationName\":\"MonitoringJobs\"}],\"dbName\":\"patients\"},\"Message\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"from\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"to\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"body\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"direction\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"messageType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"messageSid\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mediaUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mediaType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"numMedia\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"MessageToPatient\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"messages\"},\"HealthAnalysis\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"HealthAnalysisToPatient\"},{\"name\":\"symptomsText\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currentTemperature\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"riskLevel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"riskScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"confidence\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"symptomsDetected\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"reasoning\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"immediateActions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"monitoringPattern\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"monitoringIntervals\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"monitoringDuration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"responseMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"monitoringScheduled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"health_analyses\"},\"MonitoringJob\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"MonitoringJobs\"},{\"name\":\"jobType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"riskLevel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"checkNumber\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalChecks\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scheduledFor\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"monitoring_jobs\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

